Meet your favorite movie directors
========================================================
author: leo9r   
date: December 20, 2014
transition: rotate

How do we pick our favorite directors?
========================================================

We frequently wonder about our favorite movie 
directors. The following approaches are currently available to
get to such ranking:

* Trust our instinct, or our memory, by picking the directors 
of the movies we **remember** we have liked the most. 
This approach may lack coherence and systematicity.
* If we rate movies in a website like IMDb, we can rank directors using:
 + Their **average** according to our movie ratings.
 + Their **total** according to how many of their movies we have rated.
* Is there a more satisfactory approach?

Need to combine Average and Total
========================================================

```{r, echo=FALSE}
require(ggplot2)
require(grid) 
require(gridExtra) 
source('global.R')
ratsLeo <- read.csv("ratings_Michel.csv", stringsAsFactors=FALSE)
dirs <- getUniqueDirs(cleanImdbRaw(ratsLeo))
ggplot() + 
  geom_point(data=dirs, aes(x=dirCount, y = dirMean),size = 3.5) + 
  theme_bw() + 
  scale_x_continuous(breaks = round(seq(min(dirs$dirCount), max(dirs$dirCount), by = 1),0)) +
  scale_y_continuous(breaks = round(seq(min(dirs$dirMean), max(dirs$dirMean), by = 1),0)) + 
  geom_rect(aes(xmin=6.5,xmax=11.5,ymin=0.5,ymax=10.5), alpha=0.3, fill='green') +
  geom_rect(aes(xmin=0.5,xmax=11.5,ymin=8.8,ymax=10.5), alpha=0.3, fill='red') 

```
***
<small>
- An average-based ranking (*highlighted in red*) includes directors with
a very high average but an small number of movies. 
- A total-based ranking (*highlighted in green*) includes directors with
a very high number of rated movies but an small average.
- How can we take the best of both approaches?
</small>

Calculating a ranking score
========================================================
$$
  S' = \frac{t - mean(t)}{sd(t)}
$$
    
$$
  S'' = \sqrt[5]{abs(S'^3)} * sign(S')
$$
    
$$
  S = S'' + rAvg
$$
***
For each director:
   
**t** : Number of rated movies  
   
**rAvg** : Average of rated movies   
   
**S** : Ranking Score for a given director

Applying the new Ranking Score
========================================================
```{r, echo=FALSE}
    topDirs <- head(dirs,12)
    topDirs$nameF <- factor(topDirs$name, levels=rev(topDirs$name)) 
    
      g.names<-ggplot(data = topDirs,aes(x=1,y=nameF)) + 
        geom_text(aes(label=name,colour='coral'))+
        ggtitle("Top Directors") + 
        ylab(NULL) + # ggtitle(NULL) +   
        theme(axis.title=element_blank(),        
              axis.text=element_blank(),
              axis.ticks=element_blank(),
              panel.grid=element_blank(),
              panel.background=element_blank(),
              legend.position="none",
              plot.margin = unit(c(1,0,1,0), "mm"))
      
      g.means <- ggplot(data = topDirs, aes(x = nameF, y = dirMean)) +
        geom_bar(aes(fill='coral'), stat = "identity",position = "identity") + 
        geom_text(aes(label=format(round(dirMean, 2), nsmall = 2)),hjust=-0.3) +
        ggtitle("User Rating Avg.") +  
  #       ggtitle(NULL) + 
        theme(axis.title = element_blank(),         
              axis.text = element_blank(), 
              axis.ticks = element_blank(),
              panel.grid=element_blank(),
              panel.background=element_blank(),
              legend.position="none",
              plot.margin = unit(c(1,0,1,0), "mm")) +
        scale_y_reverse(expand=c(0,0)) + coord_flip()
      
      g.counts <- ggplot(data = topDirs, aes(x = nameF, y = dirCount)) +  
        geom_bar(aes(fill='coral'), stat = "identity") + 
        ggtitle("Number of Rated Movies") + 
        xlab(NULL) + #ggtitle(NULL) + 
        geom_text(aes(label=dirCount),hjust=2) +
        theme(axis.title = element_blank(),         
              axis.text = element_blank(), 
              axis.ticks = element_blank(),
              panel.grid=element_blank(),
              panel.background=element_blank(),
              legend.position="none",
              plot.margin = unit(c(1,0,1,0), "mm")) +
        scale_y_discrete(expand=c(0,0)) + coord_flip()
      
      grid.arrange(g.means,g.names,g.counts,ncol=3,widths=c(1,1,2.2))
```   
<small>[Link to Shiny App](https://leo9r.shinyapps.io/ShinyIMDB/)</small>
<small>The new ranking approach prevents the problems mentioned 
in the previous slide and generates a more satisfactory list
of Favorite Directors.</small>